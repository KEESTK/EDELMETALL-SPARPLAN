// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sparplan.Infrastructure.Persistence;

#nullable disable

namespace Sparplan.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002084853_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sparplan.Domain.Entities.Depot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Depots");
                });

            modelBuilder.Entity("Sparplan.Domain.Entities.SparplanClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BalanceInBars")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("DepotId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DepotId1")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Metal")
                        .HasColumnType("integer");

                    b.Property<decimal>("MonthlyRate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepotId");

                    b.HasIndex("DepotId1");

                    b.ToTable("Sparplaene");
                });

            modelBuilder.Entity("Sparplan.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Sparplan.Domain.Entities.SparplanClass", b =>
                {
                    b.HasOne("Sparplan.Domain.Entities.Depot", null)
                        .WithMany("Sparplaene")
                        .HasForeignKey("DepotId");

                    b.HasOne("Sparplan.Domain.Entities.Depot", null)
                        .WithMany()
                        .HasForeignKey("DepotId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sparplan.Domain.Entities.Depot", b =>
                {
                    b.Navigation("Sparplaene");
                });
#pragma warning restore 612, 618
        }
    }
}
